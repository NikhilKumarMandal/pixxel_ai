// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id
  email String @unique

  credits Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  images        Image[]
  projects      Project[]
  subscriptions Subscription[]
}

model Project {
  id     String @id @default(uuid())
  fileId String
  url    String
  width  Int
  height Int

  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Image {
  id     String @id @default(uuid())
  url    String
  fileId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
}

model Plan {
  id                 String  @id @default(uuid())
  productId          Int
  productName        String
  variantId          Int     @unique
  name               String
  description        String?
  price              String
  isUsageBased       Boolean
  interval           String?
  intervalCount      Int?
  trialInterval      String?
  trialIntervalCount Int?
  sort               Int

  subscriptions Subscription[]
}

model WebhookEvent {
  id              String  @id @default(uuid())
  eventName       String
  processed       Boolean
  body            Json
  processingError String

  createdAt DateTime @default(now())
}

model Subscription {
  id                 Int     @id @default(autoincrement())
  lemonSqueezyId     String  @unique
  orderId            Int
  name               String
  email              String
  status             String
  statusFormatted    String
  renewsAt           String?
  endsAt             String?
  trialEndsAt        String?
  price              String
  isUsageBased       Boolean @default(false)
  isPaused           Boolean @default(false)
  subscriptionItemId Int     @default(autoincrement())
  userId             String
  planId             String

  // Relations
  user User @relation(fields: [userId], references: [id])
  plan Plan @relation(fields: [planId], references: [id])
}
